# This is where the SQL should go.

#dbDriver=org.apache.derby.jdbc.ClientDriver
#server=jdbc:derby://localhost:1527/authman
#userId=authmgr
#password=changeit

dropSchema=DROP SCHEMA ? RESTRICT
createSchema=CREATE SCHEMA ?
dropTable=DROP TABLE ?

create_table.group_set_data=CREATE TABLE ?.GROUP_SET_DATA (ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 ,INCREMENT BY 1), DN VARCHAR(255) NOT NULL, DATASOURCE_ID INTEGER NOT NULL, DESCRIPTION VARCHAR(255), VALUE VARCHAR(255) NOT NULL, GUID VARCHAR(32) NOT NULL, LAST_MODIFIED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,	DELETED_DATE TIMESTAMP,	CREATED_DATE TIMESTAMP NOT NULL)
#create_index.group_set_data_idx=CREATE UNIQUE INDEX ?.GROUP_SET_DATA_IDX ON ?.GROUP_SET_DATA (ID ASC, DATASOURCE_ID ASC)
create_key.group_set_data_pk=ALTER TABLE ?.GROUP_SET_DATA ADD CONSTRAINT GROUP_SET_DATA_PK PRIMARY KEY (ID, DATASOURCE_ID)

create_table.authmgr_group_set_data=CREATE TABLE ?.AUTHMGR_GROUP_SET_DATA (ID INTEGER NOT NULL, DN VARCHAR(2048) NOT NULL, DATASOURCE_ID INTEGER NOT NULL, DESCRIPTION VARCHAR(255), VALUE VARCHAR(255) NOT NULL, GUID VARCHAR(32) NOT NULL, LAST_MODIFIED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,	DELETED_DATE TIMESTAMP,	CREATED_DATE TIMESTAMP NOT NULL)
#create_index.authmgr_group_set_data_idx=CREATE UNIQUE INDEX ?.AUTHMGR_GROUP_SET_DATA_IDX ON ?.AUTHMGR_GROUP_SET_DATA (ID ASC, DATASOURCE_ID ASC)
create_key.authmgr_group_set_data_pk=ALTER TABLE ?.AUTHMGR_GROUP_SET_DATA ADD CONSTRAINT AUTHMGR_GROUP_SET_DATA_PK PRIMARY KEY (ID, DATASOURCE_ID)

create_table.rule_set_data=CREATE TABLE ?.RULE_SET_DATA (ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY  (START WITH 1 ,INCREMENT BY 1), DATASOURCE_ID INTEGER NOT NULL, VALUE VARCHAR(255) NOT NULL, DESCRIPTION VARCHAR(255) NOT NULL, LAST_MODIFIED TIMESTAMP DEFAULT CURRENT_TIMESTAMP, DELETED_DATE TIMESTAMP, CREATED_DATE TIMESTAMP NOT NULL)
#create_index.rule_set_data_idx=CREATE UNIQUE INDEX ?.RULE_SET_DATA_IDX ON ?.RULE_SET_DATA (ID ASC, DATASOURCE_ID ASC)
#create_index.rule_set_data_idx2=CREATE INDEX ?.RULE_SET_DATA_IDX2 ON ?.RULE_SET_DATA (DATASOURCE_ID ASC)
create_key.rule_set_data_pk=ALTER TABLE ?.RULE_SET_DATA ADD CONSTRAINT RULE_SET_DATA_PK PRIMARY KEY (ID, DATASOURCE_ID)

create_table.authmgr_rule_set_data=CREATE TABLE ?.AUTHMGR_RULE_SET_DATA (ID INTEGER NOT NULL, DATASOURCE_ID INTEGER NOT NULL, VALUE VARCHAR(255) NOT NULL, DESCRIPTION VARCHAR(255) NOT NULL, LAST_MODIFIED TIMESTAMP DEFAULT CURRENT_TIMESTAMP, DELETED_DATE TIMESTAMP, CREATED_DATE TIMESTAMP NOT NULL)
#create_index.authmgr_rule_set_data_idx=CREATE UNIQUE INDEX ?.AUTHMGR_RULE_SET_DATA_IDX ON ?.AUTHMGR_RULE_SET_DATA (ID ASC, DATASOURCE_ID ASC)
#create_index.authmgr_rule_set_data_idx2=CREATE INDEX ?.AUTHMGR_RULE_SET_DATA_IDX2 ON ?.AUTHMGR_RULE_SET_DATA (DATASOURCE_ID ASC)
create_key.authmgr_rule_set_data_pk=ALTER TABLE ?.AUTHMGR_RULE_SET_DATA ADD CONSTRAINT AUTHMGR_RULE_SET_DATA_PK PRIMARY KEY (ID, DATASOURCE_ID)

create_table.user_source=CREATE TABLE ?.USER_SOURCE (ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 ,INCREMENT BY 1), DATASOURCE_ID INTEGER NOT NULL, FIRST_NAME VARCHAR(256), LAST_NAME VARCHAR(256), DN VARCHAR(2048), GUID VARCHAR(32), RULE_CODE_VALUE VARCHAR(256), TARGET_CODE_VALUE VARCHAR(256))
#create_index.user_source_idx=CREATE UNIQUE INDEX ?.USER_SOURCE_IDX ON ?.USER_SOURCE (ID ASC, DATASOURCE_ID ASC)
create_key.user_source_pk=ALTER TABLE ?.USER_SOURCE ADD CONSTRAINT USER_SOURCE_PK PRIMARY KEY (ID, DATASOURCE_ID)

create_table.user_target=CREATE TABLE ?.USER_TARGET (ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 ,INCREMENT BY 1), DATASOURCE_ID INTEGER NOT NULL, FIRST_NAME VARCHAR(256), LAST_NAME VARCHAR(256), DN VARCHAR(2048), GUID VARCHAR(32), SOURCE_CODE_VALUE VARCHAR(256))
#create_index.user_target_idx=CREATE UNIQUE INDEX ?.USER_TARGET_IDX ON ?.USER_TARGET (ID ASC)
create_key.user_target_pk=ALTER TABLE ?.USER_TARGET ADD CONSTRAINT USER_TARGET_PK PRIMARY KEY (ID)

create_table.authmgr_rule_group=CREATE TABLE ?.AUTHMGR_RULE_GROUP (ID INTEGER NOT NULL, RULE_SET_SOURCE_ID INTEGER NOT NULL, GROUP_SOURCE_ID INTEGER NOT NULL, RULE_ID INTEGER NOT NULL, GROUP_ID INTEGER NOT NULL, CREATED_DATE TIMESTAMP NOT NULL, CREATEDBY VARCHAR(32) NOT NULL, DELETED_DATE TIMESTAMP, DELETEDBY VARCHAR(32))

#create_index.authmgr_rule_group_idx=CREATE UNIQUE INDEX ?.AUTHMGR_RULE_GROUP_IDX ON ?.AUTHMGR_RULE_GROUP (ID ASC)
create_key.authmgr_rule_group_pk=ALTER TABLE ?.AUTHMGR_RULE_GROUP ADD CONSTRAINT AUTHMGR_RULE_GROUP_PK PRIMARY KEY (ID)

#delete.from_reconcile_authmgr_rule_set=DELETE FROM ?.authmgr_rule_set_data
insert.authmgr_rule_set_to_reconcile_authmgr_rule_set=\
INSERT INTO ?.authmgr_rule_set_data \
SELECT R.* \
FROM \
  authmgr.rule_set_data R \
  INNER JOIN authmgr.sources S \
    ON R.datasource_id = S.id \
WHERE R.datasource_id=? AND S.set_type=? AND R.DELETED_DATE IS NULL

#delete.from_reconcile_authmgr_group_set=DELETE FROM ?.authmgr_group_set_data
#insert.authmgr_group_set_to_reconcile_authmgr_group_set=INSERT INTO ?.authmgr_group_set_data SELECT authmgr.group_set_data.* FROM authmgr.group_set_data INNER JOIN authmgr.sources ON authmgr.group_set_data.datasource_id = authmgr.sources.id WHERE authmgr.sources.set_type = 300 AND authmgr.group_set_data.datasource_id = ?
#select.authmgr_group_set=\
#SELECT DISTINCT G.datasource_id \
#FROM \
#(AUTHMGR.GROUP_SET_DATA G \
#  LEFT JOIN AUTHMGR.RULE_GROUP RG \
#    ON G.datasource_id = RG.group_source_id) \
#  LEFT JOIN AUTHMGR.EXCEPTIONS E \
#    ON G.datasource_id = E.group_source_id \
#WHERE (((RG.rule_set_source_id)=?)) OR (((E.usertarget_source_id)=?))

#insert.authmgr_group_set_to_reconcile_authmgr_group_set=INSERT INTO ?.authmgr_group_set_data SELECT DISTINCT AUTHMGR.GROUP_SET_DATA.* FROM (AUTHMGR.GROUP_SET_DATA LEFT JOIN AUTHMGR.RULE_GROUP ON AUTHMGR.GROUP_SET_DATA.datasource_id = AUTHMGR.RULE_GROUP.group_source_id) LEFT JOIN AUTHMGR.EXCEPTIONS ON AUTHMGR.GROUP_SET_DATA.datasource_id = AUTHMGR.EXCEPTIONS.group_source_id WHERE (((AUTHMGR.RULE_GROUP.rule_set_source_id)=?)) OR (((AUTHMGR.EXCEPTIONS.usertarget_source_id)=?))
#insert.authmgr_group_set_to_reconcile_authmgr_group_set=INSERT INTO ?.authmgr_group_set_data SELECT DISTINCT AUTHMGR.GROUP_SET_DATA.* FROM ((AUTHMGR.GROUP_SET_DATA LEFT JOIN AUTHMGR.RULE_GROUP ON AUTHMGR.GROUP_SET_DATA.datasource_id = AUTHMGR.RULE_GROUP.group_source_id) LEFT JOIN AUTHMGR.EXCEPTIONS ON AUTHMGR.GROUP_SET_DATA.datasource_id = AUTHMGR.EXCEPTIONS.group_source_id) INNER JOIN SOURCES ON GROUP_SET_DATA.datasource_id = SOURCES.id WHERE (((AUTHMGR.RULE_GROUP.rule_set_source_id)=?)) OR (((AUTHMGR.EXCEPTIONS.usertarget_source_id)=?))
insert.authmgr_group_set_to_reconcile_authmgr_group_set=\
INSERT INTO ?.authmgr_group_set_data \
SELECT G.* \
FROM AUTHMGR.GROUP_SET_DATA G \
WHERE G.datasource_id IN \
  (SELECT DISTINCT group_source_id FROM AUTHMGR.RULE_GROUP RG \
	WHERE (RG.rule_set_source_id=? AND RG.DELETED_DATE IS NULL))

#delete.from_reconcile_authmgr_rule_group=DELETE FROM ?.authmgr_rule_group
insert.authmgr_rule_group_to_reconcile_authmgr_rule_group=\
INSERT INTO ?.authmgr_rule_group \
SELECT RG.* \
FROM authmgr.rule_group RG \
WHERE RG.rule_set_source_id = ? AND RG.DELETED_DATE IS NULL


#create_table.authmgr_exceptions=CREATE TABLE ?.AUTHMGR_EXCEPTIONS (ID INTEGER NOT NULL, GROUP_SOURCE_ID INTEGER NOT NULL, GROUP_ID INTEGER NOT NULL, USERTARGET_SOURCE_ID INTEGER NOT NULL, USERTARGET_ID VARCHAR(32) NOT NULL, DISPLAY_NAME VARCHAR(255), INC_OR_EXC CHAR(1) NOT NULL, START_DATE TIMESTAMP NOT NULL, END_DATE TIMESTAMP, CREATED_DATE TIMESTAMP NOT NULL, CREATEDBY VARCHAR(32) NOT NULL, MODIFIED_DATE TIMESTAMP, MODIFIEDBY VARCHAR(32), DELETED_DATE TIMESTAMP, DELETEDBY VARCHAR(32))
create_table.authmgr_exceptions=CREATE TABLE ?.AUTHMGR_EXCEPTIONS (ID INTEGER NOT NULL, GROUP_SOURCE_ID INTEGER NOT NULL, GROUP_ID INTEGER NOT NULL, USERTARGET_SOURCE_ID INTEGER NOT NULL, USERTARGET_ID VARCHAR(32) NOT NULL, INC_OR_EXC CHAR(1) NOT NULL, START_DATE TIMESTAMP NOT NULL, END_DATE TIMESTAMP, CREATED_DATE TIMESTAMP NOT NULL, CREATEDBY VARCHAR(32) NOT NULL, MODIFIED_DATE TIMESTAMP, MODIFIEDBY VARCHAR(32), DELETED_DATE TIMESTAMP, DELETEDBY VARCHAR(32), COMMENT VARCHAR(1024))
#create_index.authmgr_exceptions_idx=CREATE UNIQUE INDEX ?.AUTHMGR_EXCEPTIONS_IDX ON ?.AUTHMGR_EXCEPTIONS (ID ASC)
create_key.authmgr_exceptions_pk=ALTER TABLE ?.AUTHMGR_EXCEPTIONS ADD CONSTRAINT AUTHMGR_EXCEPTIONS_PK PRIMARY KEY (ID)

#delete.from_reconcile_authmgr_exceptions=DELETE FROM ?.authmgr_exceptions
insert.authmgr_exceptions_to_reconcile_authmgr_exceptions=\
INSERT INTO ?.authmgr_exceptions \
SELECT DISTINCT E.* \
FROM authmgr.exceptions E \
INNER JOIN RULE_GROUP RG ON E.group_source_id = RG.group_source_id \
WHERE E.usertarget_source_id = ? AND RG.rule_set_source_id = ? \
AND RG.DELETED_DATE IS NULL AND E.DELETED_DATE IS NULL \
AND CURRENT_DATE BETWEEN DATE(E.START_DATE) \
AND CASE WHEN E.END_DATE IS NULL THEN CURRENT_DATE ELSE DATE(E.END_DATE) END

create_table.authmgr_business_exceptions=CREATE TABLE ?.AUTHMGR_BUSINESS_EXCEPTIONS (ID INTEGER NOT NULL, RULE_SOURCE_ID INTEGER NOT NULL, RULE_ID INTEGER NOT NULL, USERSOURCE_SOURCE_ID INTEGER NOT NULL, USERSOURCE_ID VARCHAR(32) NOT NULL, INC_OR_EXC CHAR(1) NOT NULL, START_DATE TIMESTAMP NOT NULL, END_DATE TIMESTAMP, CREATED_DATE TIMESTAMP NOT NULL, CREATEDBY VARCHAR(32) NOT NULL, MODIFIED_DATE TIMESTAMP, MODIFIEDBY VARCHAR(32), DELETED_DATE TIMESTAMP, DELETEDBY VARCHAR(32), COMMENT VARCHAR(1024))
create_key.authmgr_business_exceptions_pk=ALTER TABLE ?.AUTHMGR_BUSINESS_EXCEPTIONS ADD CONSTRAINT AUTHMGR_BUSINESS_EXCEPTIONS_PK PRIMARY KEY (ID)
insert.authmgr_business_exceptions_to_reconcile_authmgr_business_exceptions=\
INSERT INTO ?.authmgr_business_exceptions \
SELECT E.* \
FROM authmgr.business_exceptions E \
WHERE E.usersource_source_id = ? AND E.rule_source_id = ? \
AND E.DELETED_DATE IS NULL \
AND CURRENT_DATE BETWEEN DATE(E.START_DATE) \
AND CASE WHEN E.END_DATE IS NULL THEN CURRENT_DATE ELSE DATE(E.END_DATE) END


create_table.reconcile_user=CREATE TABLE ?.RECONCILE_USER (ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 ,INCREMENT BY 1), RUN_DATETIME TIMESTAMP NOT NULL, USER_SOURCE_ID INTEGER, USER_TARGET_ID INTEGER, USER_SOURCE_FIRST_NAME VARCHAR(256), USER_SOURCE_LAST_NAME VARCHAR(256), USER_TARGET_FIRST_NAME VARCHAR(256), USER_TARGET_LAST_NAME VARCHAR(256), USER_SOURCE_DN VARCHAR(2048), USER_TARGET_DN VARCHAR(2048), USER_SOURCE_GUID VARCHAR(32), USER_TARGET_GUID VARCHAR(32), RULE_SET_SOURCE_ID INTEGER, USER_SOURCE_RULE_CODE_VALUE VARCHAR(256), USER_SOURCE_TARGET_CODE_VALUE VARCHAR(256), USER_TARGET_SOURCE_CODE_VALUE VARCHAR(256))
insert.into_reconcile_user=\
INSERT INTO ?.reconcile_user (RUN_DATETIME,  USER_SOURCE_ID, USER_TARGET_ID, USER_SOURCE_FIRST_NAME, USER_SOURCE_LAST_NAME, USER_TARGET_FIRST_NAME, USER_TARGET_LAST_NAME, USER_SOURCE_DN, USER_TARGET_DN, USER_SOURCE_GUID, USER_TARGET_GUID, RULE_SET_SOURCE_ID, USER_SOURCE_RULE_CODE_VALUE, USER_SOURCE_TARGET_CODE_VALUE, USER_TARGET_SOURCE_CODE_VALUE) \
SELECT CURRENT_TIMESTAMP, s.datasource_id, t.datasource_id, s.first_name, s.last_name, t.first_name, t.last_name, s.dn, t.dn, s.guid, t.guid, ?, s.rule_code_value, s.target_code_value, t.source_code_value \
FROM ?.user_source s \
  INNER JOIN ?.user_target t \
  ON s.target_code_value = t.source_code_value

#SET SCHEMA ?;\

select.process_business_exceptions=\
SELECT DISTINCT IJ.VALUE, IJ.INC_OR_EXC, RU.* \
FROM ?.RECONCILE_USER RU \
INNER JOIN \
 (SELECT BE.USERSOURCE_SOURCE_ID, BE.USERSOURCE_ID, RS.VALUE, BE.INC_OR_EXC \
  FROM ?.AUTHMGR_BUSINESS_EXCEPTIONS BE \
  INNER JOIN ?.AUTHMGR_RULE_SET_DATA RS \
   ON BE.RULE_SOURCE_ID = RS.DATASOURCE_ID AND BE.RULE_ID = RS.ID \
  WHERE BE.RULE_SOURCE_ID = ? AND BE.USERSOURCE_SOURCE_ID = ?) IJ \
 ON RU.USER_SOURCE_ID = IJ.USERSOURCE_SOURCE_ID AND RU.USER_SOURCE_TARGET_CODE_VALUE = IJ.USERSOURCE_ID


create_table.reconcile_groups_users=CREATE TABLE ?.RECONCILE_GROUPS_USERS (RUN_DATETIME TIMESTAMP NOT NULL, DATASOURCE_ID INTEGER, GROUP_DN VARCHAR(2048), USER_DN VARCHAR(2048))
#create_table.reconcile_groups_users=CREATE TABLE ?.RECONCILE_GROUPS_USERS (ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 ,INCREMENT BY 1), RUN_DATETIME TIMESTAMP NOT NULL, DATASOURCE_ID INTEGER, GROUP_DN VARCHAR(2048), USER_DN VARCHAR(2048))
#create_view.select_reconcile_groups_users=CREATE VIEW ?.V_RECONCILE_GROUPS_USERS (RUN_DATETIME, DATASOURCE_ID, GROUP_DN, USER_DN) AS SELECT CURRENT_TIMESTAMP, UT.DATASOURCE_ID, UT.GROUP_DN, UT.USER_DN FROM (SELECT GS.DATASOURCE_ID, GS.DN AS GROUP_DN, RU.USER_TARGET_DN AS USER_DN, RU.USER_TARGET_GUID, GS.ID AS GROUP_ID FROM ((?.RECONCILE_USER RU INNER JOIN ?.AUTHMGR_RULE_GROUP RG ON RU.RULE_SET_SOURCE_ID = RG.RULE_SET_SOURCE_ID) INNER JOIN ?.AUTHMGR_GROUP_SET_DATA GS ON RG.GROUP_ID = GS.ID) INNER JOIN ?.AUTHMGR_RULE_SET_DATA RS ON (RG.RULE_ID = RS.ID) AND (RU.USER_SOURCE_RULE_CODE_VALUE = RS.VALUE) WHERE (((RS.DELETED_DATE) Is Null) AND ((GS.DELETED_DATE) Is Null)))  AS UT LEFT JOIN (select USERTARGET_ID, GROUP_ID, INC_OR_EXC from ?.AUTHMGR_EXCEPTIONS where (DELETED_DATE Is Null))  AS EX ON (UT.USER_TARGET_GUID = EX.USERTARGET_ID) AND (UT.GROUP_ID = EX.GROUP_ID) WHERE (((EX.INC_OR_EXC)='I' Or (EX.INC_OR_EXC) Is Null))
#insert.into_reconcile_groups_users=INSERT INTO ?.RECONCILE_GROUPS_USERS SELECT * FROM ?.V_RECONCILE_GROUPS_USERS
#select.for_reconcile_groups_users=SELECT UT.DATASOURCE_ID, UT.GROUP_DN, UT.USER_DN FROM (SELECT GS.DATASOURCE_ID, GS.DN AS GROUP_DN, RU.USER_TARGET_DN AS USER_DN, RU.USER_TARGET_GUID, GS.ID AS GROUP_ID FROM ((?.RECONCILE_USER RU INNER JOIN ?.AUTHMGR_RULE_GROUP RG ON RU.RULE_SET_SOURCE_ID = RG.RULE_SET_SOURCE_ID) INNER JOIN ?.AUTHMGR_GROUP_SET_DATA GS ON RG.GROUP_ID = GS.ID) INNER JOIN ?.AUTHMGR_RULE_SET_DATA RS ON (RG.RULE_ID = RS.ID) AND (RU.USER_SOURCE_RULE_CODE_VALUE = RS.VALUE) WHERE (((RS.DELETED_DATE) Is Null) AND ((GS.DELETED_DATE) Is Null)))  AS UT LEFT JOIN (select USERTARGET_ID, GROUP_ID, INC_OR_EXC from ?.AUTHMGR_EXCEPTIONS where (DELETED_DATE Is Null))  AS EX ON (UT.USER_TARGET_GUID = EX.USERTARGET_ID) AND (UT.GROUP_ID = EX.GROUP_ID) WHERE (((EX.INC_OR_EXC)='I' Or (EX.INC_OR_EXC) Is Null))
insert.into_reconcile_groups_users=\
INSERT INTO ?.RECONCILE_GROUPS_USERS \
SELECT CURRENT_TIMESTAMP, UT.DATASOURCE_ID, UT.GROUP_DN, UT.USER_DN \
FROM \
 (SELECT GS.DATASOURCE_ID, GS.DN AS GROUP_DN, RU.USER_TARGET_DN AS USER_DN, RU.USER_TARGET_GUID, GS.ID AS GROUP_ID \
 FROM \
  ((?.RECONCILE_USER RU \
    INNER JOIN ?.AUTHMGR_RULE_GROUP RG \
     ON RU.RULE_SET_SOURCE_ID = RG.RULE_SET_SOURCE_ID) \
    INNER JOIN ?.AUTHMGR_GROUP_SET_DATA GS \
     ON RG.GROUP_ID = GS.ID) \
    INNER JOIN ?.AUTHMGR_RULE_SET_DATA RS \
     ON (RG.RULE_ID = RS.ID) AND (RU.USER_SOURCE_RULE_CODE_VALUE = RS.VALUE) \
 WHERE (((RS.DELETED_DATE) Is Null) AND ((GS.DELETED_DATE) Is Null))) AS UT \
 LEFT JOIN (select USERTARGET_ID, GROUP_ID, INC_OR_EXC \
 FROM ?.AUTHMGR_EXCEPTIONS WHERE (DELETED_DATE Is Null)) AS EX \
 ON (UT.USER_TARGET_GUID = EX.USERTARGET_ID) AND (UT.GROUP_ID = EX.GROUP_ID) \
 WHERE (((EX.INC_OR_EXC)='I' Or (EX.INC_OR_EXC) Is Null))
 
insert.into_reconcile_groups_users2=\
INSERT INTO ?.RECONCILE_GROUPS_USERS \
 SELECT CURRENT_TIMESTAMP, G.DATASOURCE_ID, G.DN, U.USER_TARGET_DN \
 FROM ?.RECONCILE_USER U \
  INNER JOIN \
   (?.AUTHMGR_EXCEPTIONS E \
    INNER JOIN ?.AUTHMGR_GROUP_SET_DATA G \
     ON E.GROUP_ID = G.ID) \
  ON U.USER_TARGET_GUID = E.USERTARGET_ID \
 WHERE (((E.INC_OR_EXC)= 'I') AND ((E.DELETED_DATE) Is Null))
 
#insert.into_reconcile_groups_users2=INSERT INTO ?.RECONCILE_GROUPS_USERS (RUN_DATETIME, DATASOURCE_ID, GROUP_DN, USER_DN) SELECT CURRENT_TIMESTAMP, G.DATASOURCE_ID, G.DN, U.USER_TARGET_DN FROM ?.RECONCILE_USER U INNER JOIN (?.AUTHMGR_EXCEPTIONS E INNER JOIN ?.AUTHMGR_GROUP_SET_DATA G ON E.GROUP_ID = G.ID) ON U.USER_TARGET_GUID = E.USERTARGET_ID WHERE (((E.INC_OR_EXC)= 'I') AND ((E.DELETED_DATE) Is Null))

create_table.current_state_groups=CREATE TABLE ?.CURRENT_STATE_GROUPS (ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 ,INCREMENT BY 1), RUN_DATETIME TIMESTAMP NOT NULL, DATASOURCE_ID INTEGER, GROUP_DN VARCHAR(2048), USER_DN VARCHAR(2048))

select.group_set_data=SELECT G.DATASOURCE_ID, G.DN FROM ?.GROUP_SET_DATA G ORDER BY G.DATASOURCE_ID 

create_table.changes_groups_users=CREATE TABLE ?.CHANGES_GROUPS_USERS (RUN_DATETIME TIMESTAMP NOT NULL, DATASOURCE_ID INTEGER, OPERATION VARCHAR(1), GROUP_DN VARCHAR(2048), USER_DN VARCHAR(2048))
insert.into_changes_groups_users=INSERT INTO ?.CHANGES_GROUPS_USERS SELECT CURRENT_TIMESTAMP, G.DATASOURCE_ID, 'A' AS OPERATION, G.GROUP_DN, G.USER_DN FROM ?.RECONCILE_GROUPS_USERS G LEFT JOIN ?.CURRENT_STATE_GROUPS S ON (G.USER_DN = S.USER_DN) AND (G.GROUP_DN = S.GROUP_DN) WHERE (((S.GROUP_DN) Is Null))
insert.into_changes_groups_users2=INSERT INTO ?.CHANGES_GROUPS_USERS SELECT CURRENT_TIMESTAMP, S.DATASOURCE_ID, 'D' AS OPERATION, S.GROUP_DN, S.USER_DN FROM (?.CURRENT_STATE_GROUPS S INNER JOIN ?.USER_TARGET T ON S.USER_DN = T.DN) LEFT JOIN ?.RECONCILE_GROUPS_USERS G ON (S.USER_DN = G.USER_DN) AND (S.GROUP_DN = G.GROUP_DN) WHERE (((G.GROUP_DN) Is Null))

select.changes_groups_users=SELECT G.DATASOURCE_ID, G.GROUP_DN, G.USER_DN, G.OPERATION FROM ?.CHANGES_GROUPS_USERS G ORDER BY G.DATASOURCE_ID

create_table.authmgr_sources=CREATE TABLE ?.AUTHMGR_SOURCES (ID INTEGER NOT NULL, SAVE_DATETIME TIMESTAMP NOT NULL, DATA_TYPE INTEGER NOT NULL, SET_TYPE INTEGER NOT NULL, SOURCE_NAME VARCHAR(255) NOT NULL, SERVER VARCHAR(255), USERID VARCHAR(255), PASSWORD VARCHAR(255), LDAP_TYPE INTEGER, LDAP_BASEDN VARCHAR(255), LDAP_FILTER VARCHAR(255), LDAP_ATTRIBUTES VARCHAR(255), LDAP_SCOPE VARCHAR(255), LDAP_CONNECT_TIMEOUT VARCHAR(255), LDAP_ENTRY_LIMIT INTEGER, LDAP_REFERRALS VARCHAR(255), LDAP_ATTRIBUTES_GUID VARCHAR(255), LDAP_ATTRIBUTES_LNAME VARCHAR(255), LDAP_ATTRIBUTES_FNAME VARCHAR(255), LDAP_ATTRIBUTES_TARGET_CONNECTOR VARCHAR(255), LDAP_ATTRIBUTES_RULE_CONNECTOR VARCHAR(255), LDAP_ATTRIBUTES_SOURCE_CONNECTOR VARCHAR(255), LDAP_ATTRIBUTES_UNIQUEID VARCHAR(255), LDAP_ATTRIBUTES_DESCRIPTION VARCHAR(255), DB_TYPE INTEGER, DB_DRIVER VARCHAR(255), DB_SELECT_OR_TRIGGER VARCHAR(255), DB_COLUMN_LNAME VARCHAR(255), DB_COLUMN_FNAME VARCHAR(255), DB_COLUMN_TARGET_CONNECTOR VARCHAR(255), DB_COLUMN_RULE_CONNECTOR VARCHAR(255), DB_COLUMN_VALUE VARCHAR(255), DB_COLUMN_DESCRIPTION VARCHAR(255), SPEC_FILE_PATH VARCHAR(255), SPEC_FILE_FORMAT VARCHAR(255), IS_ACTIVE SMALLINT, SPEC_FILE_FORMAT_TYPE INTEGER)
insert.into_authmgr_sources=\
INSERT INTO ?.AUTHMGR_SOURCES \
SELECT S.* \
FROM \
  AUTHMGR.SOURCES S \
WHERE S.id IN (?)

create_table.authmgr_reports=CREATE TABLE ?.AUTHMGR_REPORTS (ID INTEGER NOT NULL, SAVE_DATETIME TIMESTAMP NOT NULL, DATA_TYPE INTEGER NOT NULL, REPORTTYPE INTEGER NOT NULL, SOURCE_NAME VARCHAR(255) NOT NULL, SERVER VARCHAR(255), USERID VARCHAR(255), PASSWORD VARCHAR(255), LDAP_TYPE INTEGER, LDAP_BASEDN VARCHAR(255), LDAP_FILTER VARCHAR(255), LDAP_ATTRIBUTES VARCHAR(255), LDAP_SCOPE VARCHAR(255), LDAP_CONNECT_TIMEOUT VARCHAR(255), LDAP_ENTRY_LIMIT INTEGER, LDAP_REFERRALS VARCHAR(255), DB_TYPE INTEGER, DB_DRIVER VARCHAR(255), RECONCILETYPE CHAR(1), CAN_RUN_AFTER_RECONCILE CHAR(1), REPORT_SQL VARCHAR(16384))
insert.into_authmgr_reports=INSERT INTO ?.AUTHMGR_REPORTS SELECT RP.* FROM AUTHMGR.REPORTS RP INNER JOIN AUTHMGR.RECONCILE_REPORTS RR ON RP.ID = RR.REPORT_ID WHERE RR.RECONCILE_ID = ? AND RR.RUN = '1'

create_table.reports=CREATE TABLE ?.REPORTS_SNAPSHOTS (ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 ,INCREMENT BY 1), REPORT_ID INTEGER NOT NULL, SAVE_DATETIME TIMESTAMP NOT NULL, REPORT_OUTPUT CLOB)
